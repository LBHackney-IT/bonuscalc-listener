CREATE TABLE IF NOT EXISTS public.trades
(
    code text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT pk_trades PRIMARY KEY (code)
)

TABLESPACE pg_default;

ALTER TABLE public.trades
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.work_order_status
(
    id integer NOT NULL,
    status_description text COLLATE pg_catalog."default",
    display_priority integer NOT NULL,
    CONSTRAINT "PK_work_order_status" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.work_order_status
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.property_address
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    country integer,
    address_line text COLLATE pg_catalog."default",
    building_name text COLLATE pg_catalog."default",
    building_number text COLLATE pg_catalog."default",
    city_name text COLLATE pg_catalog."default",
    complex_name text COLLATE pg_catalog."default",
    department text COLLATE pg_catalog."default",
    floor text COLLATE pg_catalog."default",
    plot text COLLATE pg_catalog."default",
    postal_code text COLLATE pg_catalog."default",
    postbox text COLLATE pg_catalog."default",
    room text COLLATE pg_catalog."default",
    street_name text COLLATE pg_catalog."default",
    type text COLLATE pg_catalog."default",
    CONSTRAINT pk_property_address PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.property_address
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.site
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    CONSTRAINT pk_site PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.site
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.sor_priorities
(
    priority_code integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description text COLLATE pg_catalog."default",
    days_to_complete integer,
    enabled boolean NOT NULL DEFAULT false,
    priority_character character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'E'::bpchar,
    CONSTRAINT pk_sor_priorities PRIMARY KEY (priority_code)
)

TABLESPACE pg_default;

ALTER TABLE public.sor_priorities
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.sor_codes
(
    code text COLLATE pg_catalog."default" NOT NULL,
    short_description text COLLATE pg_catalog."default",
    priority_id integer,
    cost double precision DEFAULT 0.0,
    trade_code text COLLATE pg_catalog."default" NOT NULL DEFAULT ''::text,
    enabled boolean NOT NULL DEFAULT false,
    long_description text COLLATE pg_catalog."default",
    standard_minute_value integer NOT NULL DEFAULT 0,
    is_raisable boolean NOT NULL DEFAULT false,
    CONSTRAINT pk_sor_codes PRIMARY KEY (code),
    CONSTRAINT fk_sor_codes_sor_priorities_priority_id FOREIGN KEY (priority_id)
        REFERENCES public.sor_priorities (priority_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_sor_codes_trades_trade_code FOREIGN KEY (trade_code)
        REFERENCES public.trades (code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.sor_codes
    OWNER to repairs_admin;
-- Index: ix_sor_codes_priority_id

-- DROP INDEX public.ix_sor_codes_priority_id;

CREATE INDEX ix_sor_codes_priority_id
    ON public.sor_codes USING btree
    (priority_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_sor_codes_trade_code

-- DROP INDEX public.ix_sor_codes_trade_code;

CREATE INDEX ix_sor_codes_trade_code
    ON public.sor_codes USING btree
    (trade_code COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: sor_codes_code_uindex

-- DROP INDEX public.sor_codes_code_uindex;

CREATE UNIQUE INDEX sor_codes_code_uindex
    ON public.sor_codes USING btree
    (code COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.contractors
(
    reference text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default",
    use_external_schedule_manager boolean NOT NULL DEFAULT false,
    contract_manager_email text COLLATE pg_catalog."default",
    can_assign_operative boolean NOT NULL DEFAULT false,
    CONSTRAINT pk_contractors PRIMARY KEY (reference)
)

TABLESPACE pg_default;

ALTER TABLE public.contractors
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.contracts
(
    contract_reference text COLLATE pg_catalog."default" NOT NULL,
    termination_date timestamp without time zone NOT NULL,
    effective_date timestamp without time zone NOT NULL,
    contractor_reference text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_contracts PRIMARY KEY (contract_reference),
    CONSTRAINT fk_contracts_contractors_contractor_reference FOREIGN KEY (contractor_reference)
        REFERENCES public.contractors (reference) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.contracts
    OWNER to repairs_admin;
-- Index: ix_contracts_contractor_reference

-- DROP INDEX public.ix_contracts_contractor_reference;

CREATE INDEX ix_contracts_contractor_reference
    ON public.contracts USING btree
    (contractor_reference COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.sor_contracts
(
    sor_code_code text COLLATE pg_catalog."default" NOT NULL,
    contract_reference text COLLATE pg_catalog."default" NOT NULL,
    cost double precision,
    CONSTRAINT pk_sor_contracts PRIMARY KEY (contract_reference, sor_code_code),
    CONSTRAINT fk_sor_contracts_contracts_contract_reference1 FOREIGN KEY (contract_reference)
        REFERENCES public.contracts (contract_reference) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_sor_contracts_sor_codes_sor_code_code FOREIGN KEY (sor_code_code)
        REFERENCES public.sor_codes (code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.sor_contracts
    OWNER to repairs_admin;
-- Index: ix_sor_contracts_sor_code_code

-- DROP INDEX public.ix_sor_contracts_sor_code_code;

CREATE INDEX ix_sor_contracts_sor_code_code
    ON public.sor_contracts USING btree
    (sor_code_code COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.property_class
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    site_id integer,
    address_id integer,
    master_key_system text COLLATE pg_catalog."default",
    property_reference text COLLATE pg_catalog."default",
    CONSTRAINT pk_property_class PRIMARY KEY (id),
    CONSTRAINT fk_property_class_property_address_address_id FOREIGN KEY (address_id)
        REFERENCES public.property_address (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_property_class_site_site_id FOREIGN KEY (site_id)
        REFERENCES public.site (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.property_class
    OWNER to repairs_admin;
-- Index: ix_property_class_address_id

-- DROP INDEX public.ix_property_class_address_id;

CREATE INDEX ix_property_class_address_id
    ON public.property_class USING btree
    (address_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_property_class_site_id

-- DROP INDEX public.ix_property_class_site_id;

CREATE INDEX ix_property_class_site_id
    ON public.property_class USING btree
    (site_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.unit
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    address_id integer,
    key_safe_location text COLLATE pg_catalog."default",
    key_safe_code text COLLATE pg_catalog."default",
    property_class_id integer,
    CONSTRAINT pk_unit PRIMARY KEY (id),
    CONSTRAINT fk_unit_property_address_address_id FOREIGN KEY (address_id)
        REFERENCES public.property_address (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_unit_property_class_property_class_id FOREIGN KEY (property_class_id)
        REFERENCES public.property_class (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.unit
    OWNER to repairs_admin;
-- Index: ix_unit_address_id

-- DROP INDEX public.ix_unit_address_id;

CREATE INDEX ix_unit_address_id
    ON public.unit USING btree
    (address_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_unit_property_class_id

-- DROP INDEX public.ix_unit_property_class_id;

CREATE INDEX ix_unit_property_class_id
    ON public.unit USING btree
    (property_class_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.organization
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    doing_business_as_name text COLLATE pg_catalog."default",
    CONSTRAINT pk_organization PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.organization
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.person
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    job_status_update_id integer,
    identification_number text COLLATE pg_catalog."default",
    identification_type text COLLATE pg_catalog."default",
    name_full text COLLATE pg_catalog."default",
    name_family text COLLATE pg_catalog."default",
    name_family_prefix text COLLATE pg_catalog."default",
    name_given text COLLATE pg_catalog."default",
    name_initials text COLLATE pg_catalog."default",
    name_middle text COLLATE pg_catalog."default",
    name_title text COLLATE pg_catalog."default",
    calculated_bonus double precision,
    CONSTRAINT pk_person PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.person
    OWNER to repairs_admin;
-- Index: ix_person_job_status_update_id

-- DROP INDEX public.ix_person_job_status_update_id;

CREATE INDEX ix_person_job_status_update_id
    ON public.person USING btree
    (job_status_update_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.party
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    role text COLLATE pg_catalog."default",
    organization_id integer,
    person_id integer,
    contractor_reference text COLLATE pg_catalog."default",
    CONSTRAINT pk_party PRIMARY KEY (id),
    CONSTRAINT fk_party_organization_organization_id FOREIGN KEY (organization_id)
        REFERENCES public.organization (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_party_person_person_id FOREIGN KEY (person_id)
        REFERENCES public.person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.party
    OWNER to repairs_admin;
-- Index: ix_party_organization_id

-- DROP INDEX public.ix_party_organization_id;

CREATE INDEX ix_party_organization_id
    ON public.party USING btree
    (organization_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_party_person_id

-- DROP INDEX public.ix_party_person_id;

CREATE INDEX ix_party_person_id
    ON public.party USING btree
    (person_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.work_order_completes
(
    id integer NOT NULL,
    closed_time timestamp without time zone,
    CONSTRAINT pk_work_order_completes PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.work_order_completes
    OWNER to repairs_admin;

CREATE TABLE IF NOT EXISTS public.work_orders
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10000000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description_of_work text COLLATE pg_catalog."default",
    estimated_labor_hours double precision,
    work_type integer,
    parking_arrangements text COLLATE pg_catalog."default",
    location_of_repair text COLLATE pg_catalog."default",
    date_reported timestamp without time zone,
    work_priority_priority_code integer,
    site_id integer,
    work_class_work_class_code integer,
    work_order_complete_id integer,
    access_information_description text COLLATE pg_catalog."default",
    access_information_keysafe_code text COLLATE pg_catalog."default",
    access_information_keysafe_location text COLLATE pg_catalog."default",
    work_class_work_class_description text COLLATE pg_catalog."default",
    work_class_work_class_sub_type_work_class_sub_type_description text COLLATE pg_catalog."default",
    work_class_work_class_sub_type_work_class_sub_type_name text COLLATE pg_catalog."default",
    work_priority_comments text COLLATE pg_catalog."default",
    work_priority_number_of_days double precision,
    work_priority_priority_description text COLLATE pg_catalog."default",
    work_priority_required_completion_date_time timestamp without time zone,
    date_raised timestamp without time zone,
    assigned_to_primary_id integer,
    customer_id integer,
    instructed_by_id integer,
    agent_name text COLLATE pg_catalog."default",
    status_code integer NOT NULL DEFAULT 80,
    reason integer NOT NULL DEFAULT 0,
    agent_email text COLLATE pg_catalog."default",
    external_scheduler_reference text COLLATE pg_catalog."default",
    closed_date timestamp without time zone,
    planner_comments text COLLATE pg_catalog."default",
    CONSTRAINT pk_work_orders PRIMARY KEY (id),
    CONSTRAINT fk_work_orders_organization_instructed_by_id FOREIGN KEY (instructed_by_id)
        REFERENCES public.organization (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_orders_party_assigned_to_primary_id FOREIGN KEY (assigned_to_primary_id)
        REFERENCES public.party (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_orders_party_customer_id FOREIGN KEY (customer_id)
        REFERENCES public.party (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_orders_site_site_id FOREIGN KEY (site_id)
        REFERENCES public.site (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_orders_sor_priorities_work_priority_priority_code1 FOREIGN KEY (work_priority_priority_code)
        REFERENCES public.sor_priorities (priority_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_orders_work_order_completes_work_order_complete_id1 FOREIGN KEY (work_order_complete_id)
        REFERENCES public.work_order_completes (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.work_orders
    OWNER to repairs_admin;
-- Index: IX_workorders_status

-- DROP INDEX public."IX_workorders_status";

CREATE INDEX "IX_workorders_status"
    ON public.work_orders USING btree
    (status_code ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_assigned_to_primary_id

-- DROP INDEX public.ix_work_orders_assigned_to_primary_id;

CREATE INDEX ix_work_orders_assigned_to_primary_id
    ON public.work_orders USING btree
    (assigned_to_primary_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_customer_id

-- DROP INDEX public.ix_work_orders_customer_id;

CREATE INDEX ix_work_orders_customer_id
    ON public.work_orders USING btree
    (customer_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_instructed_by_id

-- DROP INDEX public.ix_work_orders_instructed_by_id;

CREATE INDEX ix_work_orders_instructed_by_id
    ON public.work_orders USING btree
    (instructed_by_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_site_id

-- DROP INDEX public.ix_work_orders_site_id;

CREATE INDEX ix_work_orders_site_id
    ON public.work_orders USING btree
    (site_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_work_order_complete_id

-- DROP INDEX public.ix_work_orders_work_order_complete_id;

CREATE INDEX ix_work_orders_work_order_complete_id
    ON public.work_orders USING btree
    (work_order_complete_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_orders_work_priority_priority_code

-- DROP INDEX public.ix_work_orders_work_priority_priority_code;

CREATE INDEX ix_work_orders_work_priority_priority_code
    ON public.work_orders USING btree
    (work_priority_priority_code ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.work_order_operatives
(
    work_order_id integer NOT NULL,
    operative_id integer NOT NULL,
    assignment_type integer NOT NULL DEFAULT 0,
    job_percentage double precision,
    CONSTRAINT pk_work_order_operatives PRIMARY KEY (work_order_id, operative_id),
    CONSTRAINT fk_work_order_operatives_operatives_operative_id FOREIGN KEY (operative_id)
        REFERENCES public.operatives (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_work_order_operatives_work_orders_work_order_id FOREIGN KEY (work_order_id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.work_order_operatives
    OWNER to repairs_admin;
-- Index: ix_work_order_operatives_operative_id

-- DROP INDEX public.ix_work_order_operatives_operative_id;

CREATE INDEX ix_work_order_operatives_operative_id
    ON public.work_order_operatives USING btree
    (operative_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.appointments
(
    day_id integer,
    work_order_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    end_time timestamp without time zone NOT NULL DEFAULT '0001-01-01 00:00:00'::timestamp without time zone,
    start_time timestamp without time zone NOT NULL DEFAULT '0001-01-01 00:00:00'::timestamp without time zone,
    appointment_reason text COLLATE pg_catalog."default",
    appointment_note text COLLATE pg_catalog."default",
    CONSTRAINT pk_appointments PRIMARY KEY (id),
    CONSTRAINT fk_appointments_work_orders_work_order_id FOREIGN KEY (work_order_id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public.appointments
    OWNER to repairs_admin;
-- Index: ix_appointments_day_id

-- DROP INDEX public.ix_appointments_day_id;

CREATE INDEX ix_appointments_day_id
    ON public.appointments USING btree
    (day_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_appointments_work_order_id

-- DROP INDEX public.ix_appointments_work_order_id;

CREATE INDEX ix_appointments_work_order_id
    ON public.appointments USING btree
    (work_order_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.available_appointment_days
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    available_appointment_id integer NOT NULL,
    day integer NOT NULL,
    available_count integer NOT NULL,
    CONSTRAINT pk_available_appointment_days PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.available_appointment_days
    OWNER to repairs_admin;
-- Index: ix_available_appointment_days_available_appointment_id

-- DROP INDEX public.ix_available_appointment_days_available_appointment_id;

CREATE INDEX ix_available_appointment_days_available_appointment_id
    ON public.available_appointment_days USING btree
    (available_appointment_id ASC NULLS LAST)
    TABLESPACE pg_default;

ALTER TABLE public.available_appointment_days
    ADD CONSTRAINT fk_available_appointment_days_available_appointments_available FOREIGN KEY (available_appointment_id)
    REFERENCES public.available_appointments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE public.appointments
    ADD CONSTRAINT fk_appointments_available_appointment_days_day_id FOREIGN KEY (day_id)
    REFERENCES public.available_appointment_days (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;

ALTER TABLE public.work_order_completes
    ADD CONSTRAINT fk_work_order_completes_work_orders_id FOREIGN KEY (id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE

    CREATE TABLE IF NOT EXISTS public.work_elements
(
    id uuid NOT NULL,
    contains_capital_work boolean,
    service_charge_subject integer,
    work_order_id integer,
    job_status_update_id integer,
    work_order_complete_id integer,
    CONSTRAINT pk_work_elements PRIMARY KEY (id),
    CONSTRAINT fk_work_elements_work_order_completes_work_order_complete_id FOREIGN KEY (work_order_complete_id)
        REFERENCES public.work_order_completes (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_work_elements_work_orders_work_order_id FOREIGN KEY (work_order_id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.work_elements
    OWNER to repairs_admin;
-- Index: ix_work_elements_job_status_update_id

-- DROP INDEX public.ix_work_elements_job_status_update_id;

CREATE INDEX ix_work_elements_job_status_update_id
    ON public.work_elements USING btree
    (job_status_update_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_elements_work_order_complete_id

-- DROP INDEX public.ix_work_elements_work_order_complete_id;

CREATE INDEX ix_work_elements_work_order_complete_id
    ON public.work_elements USING btree
    (work_order_complete_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_work_elements_work_order_id

-- DROP INDEX public.ix_work_elements_work_order_id;

CREATE INDEX ix_work_elements_work_order_id
    ON public.work_elements USING btree
    (work_order_id ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.job_status_updates
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    event_time timestamp without time zone,
    type_code integer,
    other_type text COLLATE pg_catalog."default",
    refined_appointment_window_id integer,
    customer_communication_channel_attempted_channel_medium integer,
    comments text COLLATE pg_catalog."default",
    more_specific_sor_code_id uuid,
    customer_communication_channel_attempted_channel_code integer,
    related_work_order_id integer,
    work_order_complete_id integer,
    additional_work_additional_work_order_id integer,
    additional_work_reason_required text COLLATE pg_catalog."default",
    customer_communication_channel_attempted_value text COLLATE pg_catalog."default",
    customer_communication_channel_attempted_description text COLLATE pg_catalog."default",
    customer_communication_channel_attempted_not_available boolean,
    author_name text COLLATE pg_catalog."default",
    author_email text COLLATE pg_catalog."default",
    CONSTRAINT pk_job_status_updates PRIMARY KEY (id),
    CONSTRAINT fk_job_status_updates_appointment_refined_appointment_window_id FOREIGN KEY (refined_appointment_window_id)
        REFERENCES public.appointment (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_job_status_updates_work_elements_more_specific_sor_code_id FOREIGN KEY (more_specific_sor_code_id)
        REFERENCES public.work_elements (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_job_status_updates_work_order_completes_work_order_complete FOREIGN KEY (work_order_complete_id)
        REFERENCES public.work_order_completes (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_job_status_updates_work_orders_additional_work_additional_w FOREIGN KEY (additional_work_additional_work_order_id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_job_status_updates_work_orders_related_work_order_id FOREIGN KEY (related_work_order_id)
        REFERENCES public.work_orders (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.job_status_updates
    OWNER to repairs_admin;
-- Index: ix_job_status_updates_additional_work_additional_work_order_id

-- DROP INDEX public.ix_job_status_updates_additional_work_additional_work_order_id;

CREATE INDEX ix_job_status_updates_additional_work_additional_work_order_id
    ON public.job_status_updates USING btree
    (additional_work_additional_work_order_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_job_status_updates_more_specific_sor_code_id

-- DROP INDEX public.ix_job_status_updates_more_specific_sor_code_id;

CREATE INDEX ix_job_status_updates_more_specific_sor_code_id
    ON public.job_status_updates USING btree
    (more_specific_sor_code_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_job_status_updates_refined_appointment_window_id

-- DROP INDEX public.ix_job_status_updates_refined_appointment_window_id;

CREATE INDEX ix_job_status_updates_refined_appointment_window_id
    ON public.job_status_updates USING btree
    (refined_appointment_window_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_job_status_updates_related_work_order_id

-- DROP INDEX public.ix_job_status_updates_related_work_order_id;

CREATE INDEX ix_job_status_updates_related_work_order_id
    ON public.job_status_updates USING btree
    (related_work_order_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_job_status_updates_work_order_complete_id

-- DROP INDEX public.ix_job_status_updates_work_order_complete_id;

CREATE INDEX ix_job_status_updates_work_order_complete_id
    ON public.job_status_updates USING btree
    (work_order_complete_id ASC NULLS LAST)
    TABLESPACE pg_default;

ALTER TABLE public.work_elements
    ADD CONSTRAINT fk_work_elements_job_status_updates_job_status_update_id FOREIGN KEY (job_status_update_id)
    REFERENCES public.job_status_updates (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;

CREATE TABLE IF NOT EXISTS public.rate_schedule_item
(
    id uuid NOT NULL,
    custom_code text COLLATE pg_catalog."default",
    custom_name text COLLATE pg_catalog."default",
    quantity_amount double precision,
    work_element_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid,
    quantity_unit_of_measurement_code integer,
    m3nhfsor_code text COLLATE pg_catalog."default",
    work_order_complete_id integer,
    code_cost double precision,
    date_created timestamp without time zone,
    original boolean NOT NULL DEFAULT false,
    original_quantity double precision,
    original_id uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000'::uuid,
    date_updated timestamp without time zone,
    CONSTRAINT pk_rate_schedule_item PRIMARY KEY (id),
    CONSTRAINT fk_rate_schedule_item_work_elements_work_element_id FOREIGN KEY (work_element_id)
        REFERENCES public.work_elements (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT fk_rate_schedule_item_work_order_completes_work_order_complete FOREIGN KEY (work_order_complete_id)
        REFERENCES public.work_order_completes (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public.rate_schedule_item
    OWNER to repairs_admin;
-- Index: ix_rate_schedule_item_work_element_id

-- DROP INDEX public.ix_rate_schedule_item_work_element_id;

CREATE INDEX ix_rate_schedule_item_work_element_id
    ON public.rate_schedule_item USING btree
    (work_element_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: ix_rate_schedule_item_work_order_complete_id

-- DROP INDEX public.ix_rate_schedule_item_work_order_complete_id;

CREATE INDEX ix_rate_schedule_item_work_order_complete_id
    ON public.rate_schedule_item USING btree
    (work_order_complete_id ASC NULLS LAST)
    TABLESPACE pg_default;